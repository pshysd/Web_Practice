package com.kh.board.controller;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload;

/**
 * Servlet implementation class BoardInsertController
 */
@WebServlet("/insert.bo")
public class BoardInsertController extends HttpServlet {
    private static final long serialVersionUID = 1L;

    /**
     * @see HttpServlet#HttpServlet()
     */
    public BoardInsertController() {
        super();
    }

    /**
     * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
     *      response)
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

//	    일반 게시글 추가 기능
//	    1. Board 테이블에 Insert
//	    2. 만약 첨부파일이 있다면 Attachment 테이블에도 insert

        request.setCharacterEncoding("UTF-8");
//	    뽑아야 할 값
//	    userNo : 작성자 회원번호
//        String boardWriter = request.getParameter("userNo");
//	    category : 카테고리 번호값
//        String category = request.getParameter("category");
//	    title : 제목
//        String boardTitle = request.getParameter("title");
//	    content : 내용
//        String boardContent = request.getParameter("content");
//	    upfile : 첨부파일
//        System.out.println(boardWriter);
//        System.out.println(category);
//        System.out.println(boardTitle);
//        System.out.println(boardContent);

//        ---- 제대로 한 거 같은데 null뜸 -> multipart/form-data 때문

//        폼 전송을 일반 방식이 아닌 multipart/form-data로 전송하는 경우
//        일반 request 객체로부터 값 뽑기가 불가하다
//        -> MultipartRequest 타입으로 변환 후 뽑기 가능

//        우선 해당 요청이 multipart/form-data 형식인지 먼저 검사
        if (ServletFileUpload.isMultipartContent(request)) {
//            ServletFileUpload.isMultipartContent(request)
//            -> 해당 request가 multipart/form-data 라면 return true

//            HttpServletRequest 타입을 MultipartRequest 타입으로 변환하기
//            -> request 객체, 저장할 파일의 경로 값, 파일의 용량 제한, 인코딩 형식, 파일명을 수정시켜주는 객체
//            (변환하는 구문의 역할은 타입을 변환할 뿐만 아니라 그 요쳥에 딸린 첨부파일까지 다 저장시켜줌)

//            1. 전송되는 파일을 처리할 작업 내용
//            1-1. 전송 파일의 용량 제한
//            (정수타입 -> int, byte 단위의 값을 기술해야 함)
//            -> 10MB로 제한

            /*
             * 단위 정리
             * 1byte == 8bit
             * 1KB == 1024byte (2의 10승)
             * 1MB == 1024 KB (2의 10승)
             * == 1024 * 1024 byte
             */
            int maxSize = 10 * 1024 * 1024;

//            1-2 전달된 파일을 저장할 서버의 실 경로 지정
            /*
             * application 내장 객체로부터 경로 알아내기
             * 
             * 참고
             * session 내장 객체 얻어내기 : request.getSession()
             * application 내장 객체 얻어내기 : session.getServeletContext()
             */
            String savePath = request.getSession().getServletContext().getRealPath("/resources/board_upfiles/");
//            -> 처음 /가 의미하는것 : WebContent
//            -> 마지막 /가 의미하는 것 : 해당 폴더 내부
            System.out.println(maxSize);
            System.out.println(savePath);
        }
    }

    /**
     * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
     *      response)
     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        doGet(request, response);
    }

}
